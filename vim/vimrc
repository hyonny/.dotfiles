" 戒め
noremap <Up> <Nop>
noremap <Down> <Nop>
noremap <Left> <Nop>
noremap <Right> <Nop>
inoremap <Up> <Nop>
inoremap <Down> <Nop>
inoremap <Left> <Nop>
inoremap <Right> <Nop>

" setting
set fenc=utf-8
set nobackup
set noswapfile
set autoread
set hidden
set showcmd

" visual setting
syntax enable
set number
set cursorline
set cursorcolumn
set virtualedit=onemore
set autoindent
set smartindent
set showmatch
set laststatus=2
set expandtab
set tabstop=2
set shiftwidth=2
set ambiwidth=double

" search option
set ignorecase
set smartcase
set incsearch
set hlsearch
nnoremap <silent><Esc><Esc> :<C-u>set nohlsearch!<CR>
set clipboard+=unnamed

" other setting
set backspace=indent,eol,start
set showmatch
set wildmenu
set history=5000

" enable mouse
if has('mouse')
  set mouse=a
  if has('mouse_sgr')
    set ttymouse=sgr
  elseif v:version > 703 || v:version is 703 && has('patch632')
    set ttymouse=sgr
  else
    set ttymouse=xterm2
  endif
endif

""""""""""""""""""""
""" 以下 NeoBundle
""""""""""""""""""""

if has('vim_starting')
  set runtimepath+=~/.vim/bundle/neobundle.vim/

  if !isdirectory(expand("~/.vim/bundle/neobundle.vim/"))
    echo "install NeoBundle..."
    :call system("git clone git://github.com/Shougo/neobundle.vim ~/.vim/bundle/neobundle.vim")
  endif
endif

call neobundle#begin(expand('~/.vim/bundle/'))

NeoBundleFetch 'Shougo/neobundle.vim'
"----------------------------------------------------------
NeoBundle 'bronson/vim-trailing-whitespace'
NeoBundle 'Yggdroot/indentLine'

if has('lua')
  NeoBundle 'Shougo/neocomplete.vim'
  NeoBundle 'Shougo/neosnippet'
  NeoBundle 'Shougo/neosnippet-snippets'
endif

if neobundle#is_installed('neocomplete.vim')
  let g:neocomplete#enable_at_startup = 1
  let g:neocomplete#enable_smart_case = 1
  let g:neocomplete#min_keyword_length = 3
  let g:neocomplete#enable_auto_delimiter = 1
  let g:neocomplete#auto_completion_start_length = 1
  inoremap <expr><BS> neocomplete#smart_close_popup()."<C-h>"
  imap <expr><CR> neosnippet#expandable() ? "<Plug>(neosnippet_expand_or_jump)" : pumvisible() ? "<C-y>" : "<CR>"
  imap <expr><TAB> pumvisible() ? "<C-n>" : neosnippet#jumpable() ? "<Plug>(neosnippet_expand_or_jump)" : "<TAB>"
endif

NeoBundle 'ctrlpvim/ctrlp.vim'
NeoBundle 'tacahiroy/ctrlp-funky'
NeoBundle 'suy/vim-ctrlp-commandline'

let g:ctrlp_match_window = 'order:ttb,min:20,max:20,results:100'
let g:ctrlp_show_hidden = 1
let g:ctrlp_types = ['fil']
let g:ctrlp_extensions = ['funky', 'commandline']

command! CtrlPCommandLine call ctrlp#init(ctrlp#commandline#id())

let g:ctrlp_funky_matchtype = 'path'

NeoBundle 'rking/ag.vim'

if executable('ag')
  let g:ctrlp_use_caching=0
  "let g:ctrlp_user_command='ag %s -i --hidden -g ""' " 「ag」の検索設定
endif

NeoBundle 'scrooloose/syntastic.git'
"----------------------------------------------------------
call neobundle#end()

filetype plugin indent on

NeoBundleCheck
